//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProveraRadnikaKlijent.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IProvera")]
    public interface IProvera {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProvera/login", ReplyAction="http://tempuri.org/IProvera/loginResponse")]
        bool login(string ime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProvera/login", ReplyAction="http://tempuri.org/IProvera/loginResponse")]
        System.Threading.Tasks.Task<bool> loginAsync(string ime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProvera/logout", ReplyAction="http://tempuri.org/IProvera/logoutResponse")]
        bool logout(string ime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProvera/logout", ReplyAction="http://tempuri.org/IProvera/logoutResponse")]
        System.Threading.Tasks.Task<bool> logoutAsync(string ime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProvera/listaPrisustva", ReplyAction="http://tempuri.org/IProvera/listaPrisustvaResponse")]
        string[] listaPrisustva(string ime_radnika);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProvera/listaPrisustva", ReplyAction="http://tempuri.org/IProvera/listaPrisustvaResponse")]
        System.Threading.Tasks.Task<string[]> listaPrisustvaAsync(string ime_radnika);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProveraChannel : ProveraRadnikaKlijent.ServiceReference1.IProvera, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProveraClient : System.ServiceModel.ClientBase<ProveraRadnikaKlijent.ServiceReference1.IProvera>, ProveraRadnikaKlijent.ServiceReference1.IProvera {
        
        public ProveraClient() {
        }
        
        public ProveraClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProveraClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProveraClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProveraClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool login(string ime) {
            return base.Channel.login(ime);
        }
        
        public System.Threading.Tasks.Task<bool> loginAsync(string ime) {
            return base.Channel.loginAsync(ime);
        }
        
        public bool logout(string ime) {
            return base.Channel.logout(ime);
        }
        
        public System.Threading.Tasks.Task<bool> logoutAsync(string ime) {
            return base.Channel.logoutAsync(ime);
        }
        
        public string[] listaPrisustva(string ime_radnika) {
            return base.Channel.listaPrisustva(ime_radnika);
        }
        
        public System.Threading.Tasks.Task<string[]> listaPrisustvaAsync(string ime_radnika) {
            return base.Channel.listaPrisustvaAsync(ime_radnika);
        }
    }
}
